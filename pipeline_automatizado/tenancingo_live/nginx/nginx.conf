# NGINX RTMP Configuration - TenancingoLive
# Streaming server con HLS y grabación automática

worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# Configuración RTMP
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        
        application live {
            live on;
            
            # HLS
            hls on;
            hls_path /hls;
            hls_fragment 3s;
            hls_playlist_length 60s;
            
            # Grabación automática
            record all;
            record_path /vod;
            record_unique on;
            record_suffix .flv;
            
            # Autenticación por stream key
            on_publish http://web:8080/auth/stream;
            
            # Notificaciones
            on_play http://web:8080/webhook/play;
            on_publish_done http://web:8080/webhook/publish_done;
            
            # Múltiples calidades
            exec ffmpeg -i rtmp://localhost/live/$name
                -c:v libx264 -c:a aac -b:v 1000k -b:a 128k -vf "scale=1280:720" -f flv rtmp://localhost/hls/$name_720p
                -c:v libx264 -c:a aac -b:v 500k -b:a 96k -vf "scale=854:480" -f flv rtmp://localhost/hls/$name_480p;
        }
        
        application hls {
            live on;
            hls on;
            hls_path /hls;
            hls_fragment 3s;
            hls_playlist_length 60s;
            
            # Solo para uso interno
            allow publish 127.0.0.1;
            deny publish all;
        }
    }
}

# Configuración HTTP
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # Optimizaciones
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    server {
        listen 8080;
        server_name _;
        
        # Servir archivos HLS
        location /hls/ {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /;
            
            # CORS para streaming
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            
            # Cache para archivos HLS
            location ~ \.m3u8$ {
                expires -1;
                add_header Cache-Control no-cache;
            }
            
            location ~ \.ts$ {
                expires 1h;
                add_header Cache-Control public;
            }
        }
        
        # Servir VOD (grabaciones)
        location /vod/ {
            root /;
            autoindex on;
            
            # Autenticación requerida
            auth_request /auth/vod;
            
            add_header 'Access-Control-Allow-Origin' '*' always;
        }
        
        # Estadísticas RTMP
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            
            # Solo acceso local
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            deny all;
        }
        
        location /stat.xsl {
            root /etc/nginx/html;
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}