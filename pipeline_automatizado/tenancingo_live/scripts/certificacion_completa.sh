#!/bin/bash
# Script de certificaci√≥n completa automatizada
# Ejecuta todas las validaciones y genera reporte final

set -e

DOMAIN="tenancingo.byethost17.com"
BASE_URL="https://$DOMAIN"
REPORT_FILE="certificacion_$(date +%Y%m%d_%H%M%S).txt"

echo "üîí CERTIFICACI√ìN INTEGRAL TENANCINGLIVE" | tee $REPORT_FILE
echo "=======================================" | tee -a $REPORT_FILE
echo "Fecha: $(date)" | tee -a $REPORT_FILE
echo "Dominio: $DOMAIN" | tee -a $REPORT_FILE
echo "" | tee -a $REPORT_FILE

# Contadores
TOTAL_TESTS=0
PASSED_TESTS=0
CRITICAL_TESTS=0
CRITICAL_PASSED=0

function test_critical() {
    local name="$1"
    local command="$2"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    CRITICAL_TESTS=$((CRITICAL_TESTS + 1))
    
    echo -n "üîç $name... " | tee -a $REPORT_FILE
    
    if eval "$command" &>/dev/null; then
        echo "‚úÖ PASS" | tee -a $REPORT_FILE
        PASSED_TESTS=$((PASSED_TESTS + 1))
        CRITICAL_PASSED=$((CRITICAL_PASSED + 1))
        return 0
    else
        echo "‚ùå FAIL" | tee -a $REPORT_FILE
        return 1
    fi
}

function test_normal() {
    local name="$1"
    local command="$2"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    
    echo -n "üîç $name... " | tee -a $REPORT_FILE
    
    if eval "$command" &>/dev/null; then
        echo "‚úÖ PASS" | tee -a $REPORT_FILE
        PASSED_TESTS=$((PASSED_TESTS + 1))
        return 0
    else
        echo "‚ö†Ô∏è  WARN" | tee -a $REPORT_FILE
        return 1
    fi
}

# ETAPA 1: CERTIFICACI√ìN T√âCNICA
echo "üìã ETAPA 1: CERTIFICACI√ìN T√âCNICA" | tee -a $REPORT_FILE
echo "=================================" | tee -a $REPORT_FILE

test_critical "SSL V√°lido" "curl -s -I $BASE_URL | grep -q 'HTTP/2 200\|HTTP/1.1 200'"
test_critical "Redirecci√≥n HTTPS" "curl -s -I http://$DOMAIN | grep -q 'Location.*https'"
test_critical "Tiempo de carga < 3s" "[[ \$(curl -w '%{time_total}' -s -o /dev/null $BASE_URL | cut -d. -f1) -lt 3 ]]"
test_critical "P√°gina principal carga" "curl -s $BASE_URL | grep -q -i 'tenancingo'"

# ETAPA 2: CERTIFICACI√ìN DE SEGURIDAD
echo "" | tee -a $REPORT_FILE
echo "üõ°Ô∏è ETAPA 2: CERTIFICACI√ìN DE SEGURIDAD" | tee -a $REPORT_FILE
echo "======================================" | tee -a $REPORT_FILE

test_critical "Headers de seguridad" "curl -s -I $BASE_URL | grep -q 'X-Frame-Options\|X-Content-Type-Options'"
test_critical "Config.php no p√∫blico" "! curl -s $BASE_URL/config.php | grep -q '<?php'"
test_normal "Compresi√≥n GZIP" "curl -s -H 'Accept-Encoding: gzip' -I $BASE_URL | grep -q 'Content-Encoding: gzip'"

# ETAPA 3: CERTIFICACI√ìN DE CONTENIDO
echo "" | tee -a $REPORT_FILE
echo "üóÇÔ∏è ETAPA 3: CERTIFICACI√ìN DE CONTENIDO" | tee -a $REPORT_FILE
echo "======================================" | tee -a $REPORT_FILE

test_critical "Sin contenido placeholder" "! curl -s $BASE_URL | grep -q -i 'lorem ipsum\|placeholder'"
test_critical "T√≠tulo personalizado" "curl -s $BASE_URL | grep -q '<title>.*TenancingoLive'"
test_normal "Favicon presente" "curl -s -I $BASE_URL/favicon.ico | grep -q '200'"

# ETAPA 4: CERTIFICACI√ìN SEO
echo "" | tee -a $REPORT_FILE
echo "üîç ETAPA 4: CERTIFICACI√ìN SEO" | tee -a $REPORT_FILE
echo "=============================" | tee -a $REPORT_FILE

test_normal "Sitemap accesible" "curl -s $BASE_URL/sitemap.xml | grep -q '<urlset\|<url>'"
test_normal "Robots.txt presente" "curl -s $BASE_URL/robots.txt | grep -q 'User-agent'"
test_normal "Meta description" "curl -s $BASE_URL | grep -q '<meta name=\"description\"'"

# ETAPA 5: CERTIFICACI√ìN FUNCIONAL
echo "" | tee -a $REPORT_FILE
echo "‚öôÔ∏è ETAPA 5: CERTIFICACI√ìN FUNCIONAL" | tee -a $REPORT_FILE
echo "===================================" | tee -a $REPORT_FILE

test_critical "P√°gina 404 personalizada" "curl -s $BASE_URL/no-existe | grep -q -i 'tenancingo\|404'"
test_critical "Webhook pagos responde" "curl -s -X POST $BASE_URL/webhook_pago.php -H 'Content-Type: application/json' -d '{}' | grep -q 'error\|invalid'"

# RESUMEN FINAL
echo "" | tee -a $REPORT_FILE
echo "üìä RESUMEN DE CERTIFICACI√ìN" | tee -a $REPORT_FILE
echo "===========================" | tee -a $REPORT_FILE
echo "Total de pruebas: $TOTAL_TESTS" | tee -a $REPORT_FILE
echo "Pruebas pasadas: $PASSED_TESTS" | tee -a $REPORT_FILE
echo "Pruebas cr√≠ticas: $CRITICAL_TESTS" | tee -a $REPORT_FILE
echo "Cr√≠ticas pasadas: $CRITICAL_PASSED" | tee -a $REPORT_FILE

SUCCESS_RATE=$((PASSED_TESTS * 100 / TOTAL_TESTS))
CRITICAL_RATE=$((CRITICAL_PASSED * 100 / CRITICAL_TESTS))

echo "Tasa de √©xito: $SUCCESS_RATE%" | tee -a $REPORT_FILE
echo "Cr√≠ticas completadas: $CRITICAL_RATE%" | tee -a $REPORT_FILE

# VEREDICTO FINAL
echo "" | tee -a $REPORT_FILE
echo "üéØ VEREDICTO FINAL" | tee -a $REPORT_FILE
echo "==================" | tee -a $REPORT_FILE

if [ $CRITICAL_RATE -eq 100 ] && [ $SUCCESS_RATE -ge 80 ]; then
    echo "‚úÖ CERTIFICADO AL 100%" | tee -a $REPORT_FILE
    echo "üöÄ TenancingoLive LISTO PARA LANZAMIENTO P√öBLICO" | tee -a $REPORT_FILE
    CERTIFIED=true
elif [ $CRITICAL_RATE -ge 80 ] && [ $SUCCESS_RATE -ge 70 ]; then
    echo "‚ö†Ô∏è  CASI CERTIFICADO" | tee -a $REPORT_FILE
    echo "üîß Corregir elementos cr√≠ticos pendientes" | tee -a $REPORT_FILE
    CERTIFIED=false
else
    echo "‚ùå NO CERTIFICADO" | tee -a $REPORT_FILE
    echo "üö´ Requiere trabajo adicional antes del lanzamiento" | tee -a $REPORT_FILE
    CERTIFIED=false
fi

# PR√ìXIMOS PASOS
echo "" | tee -a $REPORT_FILE
echo "üìã PR√ìXIMOS PASOS" | tee -a $REPORT_FILE
echo "=================" | tee -a $REPORT_FILE

if [ "$CERTIFIED" = true ]; then
    echo "1. ‚úÖ Generar Acta de Certificaci√≥n oficial" | tee -a $REPORT_FILE
    echo "2. ‚úÖ Configurar monitoreo de uptime" | tee -a $REPORT_FILE
    echo "3. ‚úÖ Preparar anuncio de lanzamiento" | tee -a $REPORT_FILE
    echo "4. ‚úÖ Activar analytics y seguimiento" | tee -a $REPORT_FILE
else
    echo "1. üîß Corregir pruebas fallidas cr√≠ticas" | tee -a $REPORT_FILE
    echo "2. üîß Revisar elementos de seguridad" | tee -a $REPORT_FILE
    echo "3. üîß Completar contenido faltante" | tee -a $REPORT_FILE
    echo "4. üîß Re-ejecutar certificaci√≥n" | tee -a $REPORT_FILE
fi

echo "" | tee -a $REPORT_FILE
echo "üìÑ Reporte guardado en: $REPORT_FILE" | tee -a $REPORT_FILE
echo "üïí Certificaci√≥n completada: $(date)" | tee -a $REPORT_FILE

# Mostrar resultado final
if [ "$CERTIFIED" = true ]; then
    echo ""
    echo "üéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâ"
    echo "üéâ  TENANCINGLIVE CERTIFICADO AL 100%  üéâ"
    echo "üéâ     LISTO PARA LANZAMIENTO P√öBLICO    üéâ"
    echo "üéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâüéâ"
    exit 0
else
    echo ""
    echo "‚ö†Ô∏è  CERTIFICACI√ìN INCOMPLETA"
    echo "üîß Revisar elementos pendientes antes del lanzamiento"
    exit 1
fi